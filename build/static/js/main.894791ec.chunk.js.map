{"version":3,"sources":["App.js","index.js"],"names":["Meta","Card","Header","Layout","Content","Footer","App","useState","data","setData","current","setCurrent","useEffect","fetch","then","res","json","result","results","className","theme","mode","defaultSelectedKeys","Array","fill","map","_","index","key","Item","style","padding","margin","console","log","obj","hoverable","width","cover","alt","src","preview_photos","urls","regular","title","description","onChange","page","total","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAIQA,EAASC,IAATD,KAEAE,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAiEVC,MAhEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,qBAAU,WACRC,MAAM,oDAAD,OAAqDH,EAArD,8EACJI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAM,OAAIR,EAAQ,YAAIQ,EAAOC,eAClC,CAACR,IAQF,eAAC,IAAD,CAAQS,UAAU,SAAlB,UACA,eAACjB,EAAD,WACE,qBAAKiB,UAAU,SACf,cAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAA3D,SACG,IAAIC,MAAM,GAAGC,KAAK,MAAMC,KAAI,SAACC,EAAGC,GAC/B,IAAMC,EAAMD,EAAQ,EACpB,OAAO,cAAC,IAAKE,KAAN,wBAA6BD,IAAbA,WAI7B,eAACxB,EAAD,CAAS0B,MAAO,CAAEC,QAAS,UAA3B,UACE,eAAC,IAAD,CAAYD,MAAO,CAAEE,OAAQ,UAA7B,UACE,cAAC,IAAWH,KAAZ,mBACA,cAAC,IAAWA,KAAZ,mBACA,cAAC,IAAWA,KAAZ,qBAEF,sBAAKV,UAAU,sBAAf,UACGc,QAAQC,IAAI1B,GACZA,EAAMA,EAAKiB,KAAI,SAACU,GAEf,OAEE,cAAC,IAAD,CACAC,WAAS,EACTN,MAAO,CAAEO,MAAO,KAChBC,MAAO,qBAAKC,IAAI,UAAUC,IAAKL,EAAIM,eAAe,GAAGC,KAAKC,UAH1D,SAKA,cAAC3C,EAAD,CAAM4C,MAAM,qBAAqBC,YAAaV,EAAIS,aAQnD,KAEL,cAAC,IAAD,CAAYlC,QAASA,EAASoC,SA1CjB,SAAAC,GACfpC,EAAWoC,IAyCyCC,MAAO,YAI3D,cAAC3C,EAAD,CAAQyB,MAAO,CAAEmB,UAAW,UAA5B,wDC5DJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.894791ec.chunk.js","sourcesContent":["import { Layout, Menu, Breadcrumb ,Pagination ,Card  } from 'antd';\nimport { useState,useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nconst { Meta } = Card;\n\nconst { Header, Content, Footer } = Layout;\nfunction App() {\n  const [data, setData] = useState([])\n\n  const [current, setCurrent] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.unsplash.com/search/collections?page=${current}&limit=10&query=cat&client_id=kQ_rA8Dd9Tb-JZ80Nx6RyFBtaoIFyaP5kdLn5EmGkVM`)\n    .then(res => res.json())\n    .then(result => setData([...result.results]))\n  }, [current])\n\n\n  const onChange = page => {\n    setCurrent(page);\n  };\n\n  return (\n    <Layout className=\"layout\">\n    <Header>\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n        {new Array(3).fill(null).map((_, index) => {\n          const key = index + 1;\n          return <Menu.Item key={key}>{`nav ${key}`}</Menu.Item>;\n        })}\n      </Menu>\n    </Header>\n    <Content style={{ padding: '0 50px' }}>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\n        <Breadcrumb.Item>List</Breadcrumb.Item>\n        <Breadcrumb.Item>App</Breadcrumb.Item>\n      </Breadcrumb>\n      <div className=\"site-layout-content\">\n        {console.log(data)}\n        {data? data.map((obj)=> {\n\n          return( \n          \n            <Card\n            hoverable\n            style={{ width: 240 }}\n            cover={<img alt=\"example\" src={obj.preview_photos[1].urls.regular} />}\n          >\n            <Meta title=\"Europe Street beat\" description={obj.title} />\n          </Card>\n\n          )\n\n\n\n\n        }):null}\n\n      <Pagination current={current} onChange={onChange} total={300} />\n\n      </div>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\n  </Layout>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}